{"version":3,"sources":["components/weather/weather.js","components/weather/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/app/index.js","components/app/App.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","this","props","city","icon","temp_celsius","temp_min","temp_max","description","React","Component","error","role","SearchPanel","onSubmit","handleSubmit","type","name","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","console","log","fetch","process","api_call","json","response","setState","celsius","calCelsius","main","temp","weather","getWeatherIcon","id","state","undefined","country","icons","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","document","body","classList","add","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96f99c71.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\n\r\n\r\nimport \"./weather.css\";\r\n\r\nclass Weather extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div>\r\n                    <h2>\r\n                        {this.props.city}\r\n                    </h2>\r\n                    <h5 className=\"py-4\">\r\n                        < i className={`wi ${this.props.icon}display-4`} />\r\n                    </h5>\r\n                    {this.props.temp_celsius ?\r\n                        <h2 className=\"py-2\">{this.props.temp_celsius}&deg;</h2> :\r\n                        null\r\n                    }\r\n                    {/** show min and max temp*/}\r\n                    {minmaxTemp(this.props.temp_min, this.props.temp_max)}\r\n\r\n                    <h4 className=\"py-3\">{this.props.description}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nfunction minmaxTemp(min, max){\r\n    if(min && max){\r\n        return (\r\n            <h3>\r\n                <span className=\"px-4\"> min {min}&deg;</span>\r\n                <span className=\"px-4\"> max {max}&deg;</span>\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nexport default Weather;","import Weather from \"./weather\";\r\nexport default Weather;","import React from \"react\";\r\n\r\nimport \"./search-panel.css\"\r\n\r\n const SearchPanel = props => {\r\n        const placeholder = 'Enter the name of the city';\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    className=\"form-inline\"\r\n                    onSubmit={props.handleSubmit}\r\n                >\r\n                    <div>{props.error ? error() : \"\"}</div>\r\n                    <input\r\n                        className=\"form-control mr-sm-2\"\r\n                        type=\"search\"\r\n                        name=\"city\"\r\n                        placeholder={placeholder}\r\n                    />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nconst error = props => {\r\n    return (\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter City...!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPanel;","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import App from \"./App\";\r\nexport default App;","import React, {Component} from \"react\";\nimport './App.css';\n\nimport Weather from \"../weather\";\nimport 'weather-icons/css/weather-icons.css';\nimport SearchPanel from \"../search-panel\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state ={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_min: undefined,\n      temp_max: undefined,\n      description: \"\",\n      error: false,\n\n\n    };\n\n\n    this.icons = {\n      Thunderstorm: 'wi-thunderstorm ',\n      Drizzle: 'wi-sleet ',\n      Rain: 'wi-storm-showers ',\n      Snow: 'wi-snow ',\n      Atmosphere: 'wi-fog ',\n      Clear: 'wi-day-sunny ',\n      Clouds: 'wi-day-fog '\n\n    };\n  }\n  calCelsius(temp){\n    return Math.floor(temp - 273.15);\n  }\n  getWeatherIcon(icons, id){\n    switch (true){\n      case id >= 200 && id <=232:\n        this.setState({icon: this.icons.Thunderstorm});\n        document.body.classList.add('thunderstorm');\n        break;\n      case id >= 300 && id <=321:\n        this.setState({icon: this.icons.Drizzle});\n        document.body.classList.add('drizzle');\n        break;\n      case id >= 500 && id <=531:\n        this.setState({icon: this.icons.Rain});\n        document.body.classList.add('rain');\n        break;\n      case id >= 600 && id <=622:\n        this.setState({icon: this.icons.Snow});\n        document.body.classList.add('snow');\n        break;\n      case id >= 701 && id <=781:\n        this.setState({icon: this.icons.Atmosphere});\n        document.body.classList.add('atmosphere');\n        break;\n      case id === 800 :\n        this.setState({icon: this.icons.Clear});\n        document.body.classList.add('clear');\n        break;\n      case id >= 801 && id <=804:\n        this.setState({icon: this.icons.Clouds});\n        document.body.classList.add('clouds');\n        break;\n      default:\n        this.setState({icon: this.icons.Clouds});\n        document.body.classList.add('clouds');\n    }\n\n\n  }\n\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    console.log(city);\n\n    if (city) {\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n\n      const response = await api_call.json();\n\n      console.log(response);\n\n      this.setState({\n        city: `${response.name}`,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n      this.getWeatherIcon(this.icon, response.weather[0].id);\n    } else {\n      this.setState({error: true});\n    }\n  };\n\n\n  render() {\n    const {city, country, celsius, temp_max, temp_min, description, icon} = this.state;\n    return (\n        <div className=\"App\">\n          <SearchPanel handleSubmit={this.getWeather} error={this.state.error}/>\n          <Weather\n              city={city}\n              country={country}\n              temp_celsius={celsius}\n              temp_max={temp_max}\n              temp_min={temp_min}\n              description={description}\n              icon={icon}\n          />\n        </div>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from \"./components/app\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}