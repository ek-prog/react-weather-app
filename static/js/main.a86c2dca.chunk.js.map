{"version":3,"sources":["components/weather/weather.js","components/weather/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/find-me/index.js","components/find-me/find-me.jsx","components/app/App.js","components/app/index.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","this","props","city","icon","temp_celsius","temp_min","temp_max","description","React","Component","error","role","SearchPanel","onSubmit","handleSubmit","type","name","placeholder","FindMe","useState","coordinates","lat","lng","location","setLocation","cityName","setCityName","setIsLoaded","success","coords","latitude","longitude","useEffect","navigator","code","message","geolocation","getCurrentPosition","fetch","then","res","json","result","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","AddressDetails","Country","AdministrativeArea","SubAdministrativeArea","Locality","LocalityName","console","log","alert","API_KEY","process","App","undefined","setCity","setIcon","celsius","setCelsius","setTemp_min","setTemp_max","setDescription","setError","icons","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","calCelsius","temp","Math","floor","getWeatherIcon","id","document","body","classList","add","getWeather","e","a","preventDefault","target","elements","value","main","weather","ReactDOM","render","getElementById"],"mappings":"0UAqCA,SAASA,EAAWC,EAAKC,GACrB,GAAGD,GAAOC,EACN,OACI,+BACI,uBAAMC,UAAU,OAAhB,kBAA6BF,EAA7B,UACA,uBAAME,UAAU,OAAhB,kBAA6BD,EAA7B,aAKDE,IC9CAA,E,4JDSX,WACI,OACI,qBAAKD,UAAU,YAAf,SACI,gCACI,6BACKE,KAAKC,MAAMC,OAEhB,oBAAIJ,UAAU,OAAd,SACI,mBAAIA,UAAS,aAAQE,KAAKC,MAAME,KAAnB,iBAEhBH,KAAKC,MAAMG,aACR,qBAAIN,UAAU,OAAd,UAAsBE,KAAKC,MAAMG,aAAjC,UACA,KAGHT,EAAWK,KAAKC,MAAMI,SAAUL,KAAKC,MAAMK,UAE5C,oBAAIR,UAAU,OAAd,SAAsBE,KAAKC,MAAMM,uB,GAnB/BC,IAAMC,WEiBtBC,G,YAAQ,SAAAT,GACV,OACI,qBAAKH,UAAU,0BAA0Ba,KAAK,QAA9C,qCCzBOC,EDEM,SAAAX,GAEb,OACI,qBAAKH,UAAU,YAAf,SACI,uBACIA,UAAU,cACVe,SAAUZ,EAAMa,aAFpB,UAII,8BAAMb,EAAMS,MAAQA,IAAU,KAC9B,uBACIZ,UAAU,uBACViB,KAAK,SACLC,KAAK,OACLC,YAZI,+BAcR,wBAAQnB,UAAU,uCAAuCiB,KAAK,SAA9D,0BElBLG,ECAA,WAGX,MAAgCC,mBAAS,CACrCC,YAAa,CAACC,IAAK,GAAIC,IAAK,MADhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAOA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEA,EAAgCP,oBAAS,GAAzC,mBAAiBQ,GAAjB,WAGMC,EAAU,SAACL,GACbC,EAAY,CACRJ,YAAa,CACTC,IAAKE,EAASM,OAAOC,SACrBR,IAAKC,EAASM,OAAOE,cAKjCD,EAAWP,EAASH,YAAYC,IAChCU,EAAYR,EAASH,YAAYE,IAE3BZ,EAAQ,SAAAA,GACVc,EAAY,CACTd,WAyCP,OArCAsB,qBAAU,WACD,gBAAiBC,WAClBvB,EAAM,CACFwB,KAAM,EACNC,QAAS,wMAGjBF,UAAUG,YAAYC,mBAAmBT,EAASlB,KACnD,IAIHsB,qBAAU,WACNM,MAAM,2FAAD,OAA4FP,EAA5F,YAAyGD,EAAzG,+BACAS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACSA,EACDC,SACAC,oBAAoBC,cAAc,GAAGC,UAAUC,iBAAiBC,iBAAiBC,eAAeC,QAAQC,mBAAmBC,sBAAsBC,SAASC,cAG3J5B,EACIgB,EACKC,SACAC,oBAAoBC,cAAc,GAAGC,UAAUC,iBAAiBC,iBAAiBC,eAAeC,QAAQC,mBAAmBC,sBAAsBC,SAASC,cAGnKC,QAAQC,IAAId,EAAOC,SAASC,oBAAoBC,cAAc,GAAGC,UAAUvC,aAC3EgD,QAAQC,IAAId,EAAOC,SAASC,oBAAoBC,cAAc,GAAGC,UAAUC,iBAAiBC,iBAAiBC,eAAeC,QAAQC,mBAAmBC,sBAAsBC,SAASC,cACtL3B,GAAY,IAVZ8B,MAAM,kFAcvB,IAIC,8BAAIhC,EAAJ,SChEFiC,EAAUC,mCCPDC,EDUH,WACV,MAAwBzC,wBAAS0C,GAAjC,mBAAO3D,EAAP,KAAa4D,EAAb,KACA,EAAwB3C,wBAAS0C,GAAjC,mBAAO1D,EAAP,KAAa4D,EAAb,KACA,EAA8B5C,wBAAS0C,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgC9C,wBAAS0C,GAAzC,mBAAOxD,EAAP,KAAiB6D,EAAjB,KACA,EAAgC/C,wBAAS0C,GAAzC,mBAAOvD,EAAP,KAAiB6D,EAAjB,KACA,EAAsChD,mBAAS,IAA/C,mBAAOZ,EAAP,KAAoB6D,EAApB,KACA,EAA0BjD,oBAAS,GAAnC,mBAAOT,EAAP,KAAc2D,EAAd,KAKQC,EAAQ,CACZC,aAAc,mBACdC,QAAS,YACTC,KAAM,oBACNC,KAAM,WACNC,WAAY,UACZC,MAAO,gBACPC,OAAQ,eAINC,EAAa,SAACC,GAClB,OAAOC,KAAKC,MAAMF,EAAO,SAEvBG,EAAiB,SAACZ,EAAOa,GAC3B,QAAQ,GACN,KAAKA,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAMC,cACda,SAASC,KAAKC,UAAUC,IAAI,gBAC5B,MACF,KAAKJ,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAME,SACdY,SAASC,KAAKC,UAAUC,IAAI,WAC5B,MACF,KAAKJ,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAMG,MACdW,SAASC,KAAKC,UAAUC,IAAI,QAC5B,MACF,KAAKJ,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAMI,MACdU,SAASC,KAAKC,UAAUC,IAAI,QAC5B,MACF,KAAKJ,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAMK,YACdS,SAASC,KAAKC,UAAUC,IAAI,cAC5B,MACF,KAAY,MAAPJ,EACHpB,EAAQO,EAAMM,OACdQ,SAASC,KAAKC,UAAUC,IAAI,SAC5B,MACF,KAAKJ,GAAM,KAAOA,GAAK,IACrBpB,EAAQO,EAAMO,QACdO,SAASC,KAAKC,UAAUC,IAAI,UAC5B,MACF,QACExB,EAAQO,EAAMO,QACdO,SAASC,KAAKC,UAAUC,IAAI,YAK5BC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDAEjBD,EAAEE,iBAEIzF,EAAOuF,EAAEG,OAAOC,SAAS3F,KAAK4F,MACpCvC,QAAQC,IAAItD,GAERA,EACFoC,MAAM,qDAAD,OAAsDpC,EAAtD,kBAAoEwD,EAApE,aACAnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAI,GACAmB,EAAQnB,EAAS3B,MACjBiD,EAAWa,EAAWnC,EAASoD,KAAKhB,OACpCb,EAAYY,EAAWnC,EAASoD,KAAK1F,WACrC8D,EAAYW,EAAWnC,EAASoD,KAAKzF,WACrC8D,EAAezB,EAASqD,QAAQ,GAAGzF,aACrC2E,EAAeZ,EAAO3B,EAASqD,QAAQ,GAAGb,OAKlDd,GAAU,GArBK,2CAAH,sDA0Cd,OAjBFrC,qBAAU,WACVM,MAAM,mEAAD,OAAoEoB,EAApE,aACAnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAI,GACAmB,EAAQnB,EAAS3B,MACjBiD,EAAWa,EAAWnC,EAASoD,KAAKhB,OACpCb,EAAYY,EAAWnC,EAASoD,KAAK1F,WACrC8D,EAAYW,EAAWnC,EAASoD,KAAKzF,WACrC8D,EAAezB,EAASqD,QAAQ,GAAGzF,aACnC2E,EAAeZ,EAAO3B,EAASqD,QAAQ,GAAGb,SAKjD,IAIG,sBAAKrF,UAAU,MAAf,UACE,cAAC,EAAD,CAAagB,aAAc0E,EAAY9E,MAAOA,IAC9C,cAAC,EAAD,CACIR,KAAMA,EACNE,aAAc4D,EACd1D,SAAUA,EACVD,SAAUA,EACVE,YAAaA,EACbJ,KAAMA,IAIR,cAAC,EAAD,IACA,4BE1HZ8F,IAASC,OACL,cAAC,EAAD,IACFd,SAASe,eAAe,W","file":"static/js/main.a86c2dca.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\n\r\n\r\nimport \"./weather.css\";\r\n\r\n\r\nclass Weather extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div>\r\n                    <h2>\r\n                        {this.props.city}\r\n                    </h2>\r\n                    <h5 className=\"py-4\">\r\n                        < i className={`wi ${this.props.icon}display-4`} />\r\n                    </h5>\r\n                    {this.props.temp_celsius ?\r\n                        <h2 className=\"py-2\">{this.props.temp_celsius}&deg;</h2> :\r\n                        null\r\n                    }\r\n                    {/** show min and max temp*/}\r\n                    {minmaxTemp(this.props.temp_min, this.props.temp_max)}\r\n\r\n                    <h4 className=\"py-3\">{this.props.description}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nfunction minmaxTemp(min, max){\r\n    if(min && max){\r\n        return (\r\n            <h3>\r\n                <span className=\"px-4\"> min {min}&deg;</span>\r\n                <span className=\"px-4\"> max {max}&deg;</span>\r\n            </h3>\r\n        )\r\n    }\r\n}\r\nexport default Weather;","import Weather from \"./weather\";\r\nexport default Weather;","import React from \"react\";\r\n\r\nimport \"./search-panel.css\"\r\n\r\n const SearchPanel = props => {\r\n        const placeholder = 'Enter the name of the city';\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    className=\"form-inline\"\r\n                    onSubmit={props.handleSubmit}\r\n                >\r\n                    <div>{props.error ? error() : \"\"}</div>\r\n                    <input\r\n                        className=\"form-control mr-sm-2\"\r\n                        type=\"search\"\r\n                        name=\"city\"\r\n                        placeholder={placeholder}\r\n                    />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nconst error = props => {\r\n    return (\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter City...!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPanel;","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import FindMe from \"./find-me\";\r\nexport default FindMe;","import React, {useState, useEffect} from \"react\";\r\nconst FindMe = () =>{\r\n\r\n// const API_key_yandex = '905a83a5-04b2-4f94-a08f-ce094f8b277c';\r\n    const [location, setLocation] = useState({\r\n        coordinates: {lat: \"\", lng: \"\"},\r\n    });\r\n\r\n\r\n    // const [latitude, setLatitude] = useState('');\r\n    // const [longitude, setLongitude] = useState('');\r\n    const [cityName, setCityName] = useState('');\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    const success = (location) =>{\r\n        setLocation({\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        });\r\n    };\r\n\r\nlet latitude = location.coordinates.lat;\r\nlet longitude = location.coordinates.lng;\r\n\r\n    const error = error =>{\r\n        setLocation({\r\n           error,\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(!(\"geolocation\" in navigator)){\r\n            error({\r\n                code: 0,\r\n                message: 'Geolocation не поддерживается вашим браузером',\r\n            });\r\n        }\r\n        navigator.geolocation.getCurrentPosition(success, error)\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=905a83a5-04b2-4f94-a08f-ce094f8b277c&geocode=${longitude},${latitude}&format=json&kind=locality`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (! result\r\n                        .response\r\n                        .GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName){\r\n                        alert('Введите город');\r\n                    }else {\r\n                        setCityName(\r\n                            result\r\n                                .response\r\n                                .GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName)\r\n\r\n\r\n                        console.log(result.response.GeoObjectCollection.featureMember[0].GeoObject.description);\r\n                        console.log(result.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName);\r\n                        setIsLoaded(true);\r\n                    }\r\n            })\r\n\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <p>{cityName} .</p>\r\n        // <FindMe cityName={cityName} />\r\n\r\n    );\r\n\r\n};\r\nexport default FindMe;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport Weather from \"../weather\";\nimport 'weather-icons/css/weather-icons.css';\nimport SearchPanel from \"../search-panel\";\nimport FindMe from \"../find-me\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n\nconst App = () =>{\n  const [city, setCity] = useState(undefined);\n  const [icon, setIcon] = useState(undefined);\n  const [celsius, setCelsius] = useState(undefined);\n  const [temp_min, setTemp_min] = useState(undefined);\n  const [temp_max, setTemp_max] = useState(undefined);\n  const [description, setDescription] = useState(\"\");\n  const [error, setError] = useState(false);\n\n\n  // const location = FindMe();\n\n    const icons = {\n      Thunderstorm: 'wi-thunderstorm ',\n      Drizzle: 'wi-sleet ',\n      Rain: 'wi-storm-showers ',\n      Snow: 'wi-snow ',\n      Atmosphere: 'wi-fog ',\n      Clear: 'wi-day-sunny ',\n      Clouds: 'wi-day-fog '\n\n    };\n\n  const calCelsius = (temp) =>{\n    return Math.floor(temp - 273.15);\n  }\nconst getWeatherIcon = (icons, id) =>{\n    switch (true){\n      case id >= 200 && id <=232:\n        setIcon(icons.Thunderstorm);\n        document.body.classList.add('thunderstorm');\n        break;\n      case id >= 300 && id <=321:\n        setIcon(icons.Drizzle);\n        document.body.classList.add('drizzle');\n        break;\n      case id >= 500 && id <=531:\n        setIcon(icons.Rain);\n        document.body.classList.add('rain');\n        break;\n      case id >= 600 && id <=622:\n        setIcon(icons.Snow);\n        document.body.classList.add('snow');\n        break;\n      case id >= 701 && id <=781:\n        setIcon(icons.Atmosphere);\n        document.body.classList.add('atmosphere');\n        break;\n      case id === 800 :\n        setIcon(icons.Clear);\n        document.body.classList.add('clear');\n        break;\n      case id >= 801 && id <=804:\n        setIcon(icons.Clouds);\n        document.body.classList.add('clouds');\n        break;\n      default:\n        setIcon(icons.Clouds);\n        document.body.classList.add('clouds');\n    }\n\n  }\n\n  const getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    console.log(city);\n\n    if (city) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&lang=ru`)\n          .then(res => res.json())\n          .then(response => {\n                setCity(response.name);\n                setCelsius(calCelsius(response.main.temp));\n                setTemp_min(calCelsius(response.main.temp_min));\n                setTemp_max(calCelsius(response.main.temp_max));\n                setDescription(response.weather[0].description);\n              getWeatherIcon(icons, response.weather[0].id);\n\n              },\n          )\n    } else {\n      setError( true);\n    }\n  };\n\n  useEffect(()=>{\n  fetch(`https://api.openweathermap.org/data/2.5/weather?q=Irkutsk&appid=${API_KEY}&lang=ru`)\n      .then(res => res.json())\n      .then(response => {\n            setCity(response.name);\n            setCelsius(calCelsius(response.main.temp));\n            setTemp_min(calCelsius(response.main.temp_min));\n            setTemp_max(calCelsius(response.main.temp_max));\n            setDescription(response.weather[0].description);\n            getWeatherIcon(icons, response.weather[0].id);\n\n          },\n      );\n\n  }, []);\n\n\n    return (\n        <div className=\"App\">\n          <SearchPanel handleSubmit={getWeather} error={error}/>\n          <Weather\n              city={city}\n              temp_celsius={celsius}\n              temp_max={temp_max}\n              temp_min={temp_min}\n              description={description}\n              icon={icon}\n          />\n\n            {/*<p>Props: {props.cityName}</p>*/}\n            <FindMe />\n            <div>\n                {/*{location ? JSON.stringify(location) : \"Location data not available yet.\"}*/}\n            </div>\n        </div>\n    )\n}\n\n\nexport default App;","import App from \"./App\";\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from \"./components/app\";\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}